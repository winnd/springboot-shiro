<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bishe.demo.dao.RelicImageMapper">
  <resultMap id="BaseResultMap" type="com.bishe.demo.model.RelicImage">
    <constructor>
      <idArg column="image_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
      <arg column="relic_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
      <arg column="url" jdbcType="VARCHAR" javaType="java.lang.String"/>
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
      <arg column="create_by" jdbcType="INTEGER" javaType="java.lang.Integer"/>
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
      <arg column="update_by" jdbcType="INTEGER" javaType="java.lang.Integer"/>
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    image_id, relic_id, url, create_time, create_by, update_time, update_by
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List"/>
    from relic_images
    where image_id = #{imageId,jdbcType=INTEGER}
  </select>
  <select id="selectByRelicId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List"/>
    from relic_images
    where relic_id = #{relicId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from relic_images
    where image_id = #{imageId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bishe.demo.model.RelicImage">
    <selectKey resultType="java.lang.Integer" keyProperty="imageId" order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into relic_images (relic_id, url, create_time,
    create_by, update_time, update_by
    )
    values (#{relicId,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
    #{createBy,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.bishe.demo.model.RelicImage">
    <selectKey resultType="java.lang.Integer" keyProperty="imageId" order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into relic_images
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="relicId != null">
        relic_id,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="relicId != null">
        #{relicId,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <insert id="insertimgList" parameterType="java.util.List">
    insert into relic_images(relic_id,url,create_time,update_time,create_by,update_by) values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.relicId},#{item.url},now(),now(),1,1)
    </foreach>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bishe.demo.model.RelicImage">
    update relic_images
    <set>
      <if test="relicId != null">
        relic_id = #{relicId,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
    </set>
    where image_id = #{imageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bishe.demo.model.RelicImage">
    update relic_images
    set relic_id = #{relicId,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER}
    where image_id = #{imageId,jdbcType=INTEGER}
  </update>
</mapper>